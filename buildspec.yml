version: 0.2

phases:
  install:
    commands:
      - npm ci
  pre_build:
    commands:
      - npm run lint
      - mkdir artifact
      - npx cdk synth LambdaStack-$ENV --require-approval never -c env=$ENV > ./artifact/${SYNTH_TEMPLETE}
      # - export layerS3LocationName="${APP_NAME}-layer-${ENV}-s3-location"
      # - export layerS3LocationValue=$(aws cloudformation list-exports --query "Exports[?Name=='$layerS3LocationName'].Value" --output text)
      # - export serverLambdaS3LocationName="${APP_NAME}-server-lambda-${ENV}-s3-location"
      # - export serverLambdaS3LocationValue=$(aws cloudformation list-exports --query "Exports[?Name=='$serverLambdaS3LocationName'].Value" --output text)
  build:
    commands:
      - npm run build
      # 打包静态文件
      - echo "Upload Static Files..."
      - aws s3 sync build/client s3://$WEB_BUCKET/ --delete --acl bucket-owner-full-control
      # 打包 Lambda 函数代码
      - echo "Building Lambda..."
      - mkdir tmp_zip
      - cp -r ${CODEBUILD_SRC_DIR}/build/server/* tmp_zip/
      - cp server/index.js tmp_zip/
      - cp server/lambda.js tmp_zip/
      - cd ${CODEBUILD_SRC_DIR}/tmp_zip && zip -r ${CODEBUILD_SRC_DIR}/artifact/server.zip .

      # 打包 Layer
      - echo "Building Lambda Layer..."
      - mkdir -p ${CODEBUILD_SRC_DIR}/artifact/layer/nodejs
      - cp -rf ${CODEBUILD_SRC_DIR}/package-lock.json ${CODEBUILD_SRC_DIR}/artifact/layer/nodejs/
      - cp -rf ${CODEBUILD_SRC_DIR}/package.json ${CODEBUILD_SRC_DIR}/artifact/layer/nodejs/
      - cd ${CODEBUILD_SRC_DIR}/artifact/layer/nodejs
      - npm ci --omit=dev
      - cd ${CODEBUILD_SRC_DIR}/artifact/layer
      - zip -r ${CODEBUILD_SRC_DIR}/artifact/layer.zip nodejs

artifacts:
  files:
    - ${SYNTH_TEMPLETE}
    - server.zip
    - layer.zip
  base-directory: artifact
